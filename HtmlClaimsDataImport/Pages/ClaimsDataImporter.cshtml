@page
@model HtmlClaimsDataImport.Pages.ClaimsDataImporter
@{
    ViewData["Title"] = "Claims Data Importer";
}

<script src="https://cdn.jsdelivr.net/npm/htmx.org@2.0.6/dist/htmx.min.js"></script>
<script src="~/js/navigation.js"></script>
<script src="~/js/fileUpload.js"></script>
<script src="~/js/dataLoading.js"></script>
<script src="~/js/columnMapping.js"></script>
<script src="~/js/modelPrompt.js"></script>

<style>
    .nav-header {
        border-bottom: 0.0625em solid #ddd;
        padding: 0.625em 1.25em;
        background-color: #f8f9fa;
    }
    
    .nav-menu {
        display: flex;
        gap: 1.25em;
        margin: 0;
        padding: 0;
        list-style: none;
    }
    
    .nav-menu li {
        cursor: pointer;
        padding: 0.5em 1em;
        border-radius: 0.25em;
    }
    
    .nav-menu li.active {
        background-color: #007bff;
        color: white;
    }
    
    .nav-menu li:hover:not(.active) {
        background-color: #e9ecef;
    }
    
    .main-container {
        display: flex;
        height: calc(100vh - 3.75em);
    }
    
    .sidebar {
        width: 12.5em;
        border-right: 0.0625em solid #ddd;
        background-color: #f8f9fa;
        padding: 1.25em;
    }
    
    .sidebar ul {
        list-style: none;
        padding: 0;
        margin: 0;
    }
    
    .sidebar li {
        padding: 0.5em 0.75em;
        cursor: pointer;
        border-radius: 0.25em;
        margin-bottom: 0.3125em;
    }
    
    .sidebar li.active {
        background-color: #007bff;
        color: white;
    }
    
    .sidebar li:hover:not(.active) {
        background-color: #e9ecef;
    }

    /* Preview sidebar: claims columns list with red dots */
    #claims-columns-list {
        list-style: none;
        margin: 0;
        padding: 0;
    }
    #claims-columns-list li {
        position: relative;
        padding: 0.4em 0.75em 0.4em 1.4em; /* left pad for dot */
        cursor: pointer;
        border-radius: 0.25em;
        margin-bottom: 0.25em;
        user-select: none;
    }
    #claims-columns-list li::before {
        content: '';
        position: absolute;
        left: 0.6em;
        top: 50%;
        transform: translateY(-50%);
        width: 8px;
        height: 8px;
        border-radius: 50%;
        background-color: #dc3545; /* red for unmapped */
    }
    #claims-columns-list li.mapped::before {
        opacity: 0; /* hide dot once mapped */
    }
    #claims-columns-list li.active {
        background-color: #007bff;
        color: white;
    }
    
    .content-area {
        flex: 1;
        padding: 1.25em;
    }
    
    .form-group {
        margin-bottom: 1.25em;
    }
    
    .form-group label {
        display: inline-block;
        width: 5em;
        font-weight: bold;
    }
    
    .form-group input {
        width: 18.75em;
        padding: 0.5em;
        border: 0.0625em solid #ccc;
        border-radius: 0.25em;
        font-size: 0.7em;
    }
    
    .mode-selector {
        width: 9.375em;
        padding: 0.5em;
        border: 0.0625em solid #ccc;
        border-radius: 0.25em;
        font-size: 0.8em;
        margin-bottom: 0.625em;
    }
    
    .default-preview {
        background-color: #f8f9fa;
        border: 0.0625em solid #e9ecef;
        border-radius: 0.25em;
        padding: 0.625em;
        margin-top: 0.3125em;
        margin-bottom: 0.625em;
    }
    
    .default-text {
        color: #6c757d;
        font-style: italic;
        font-size: 0.9em;
    }
    
    .upload-section {
        margin-top: 0.3125em;
    }
    
    .file-path-input {
        width: 18.75em;
        padding: 0.5em;
        border: 0.0625em solid #ccc;
        border-radius: 0.25em;
        font-size: 0.7em;
    }
    
    .browse-btn {
        margin-left: 0.625em;
        padding: 0.5em 1em;
        background-color: #6c757d;
        color: white;
        border: none;
        border-radius: 0.25em;
        cursor: pointer;
    }
    
    .browse-btn:hover {
        background-color: #5a6268;
    }
    
    .file-input {
        display: none;
    }
    
    .file-status {
        margin-left: 0.625em;
        color: #6c757d;
        font-style: italic;
    }
    
    .hidden {
        display: none;
    }
    
    .load-btn {
        padding: 0.625em 1.25em;
        background-color: #007bff;
        color: white;
        border: none;
        border-radius: 0.25em;
        cursor: pointer;
        font-size: 1em;
        margin-right: 0.625em;
    }
    
    .load-btn:hover:not(.disabled) {
        background-color: #0056b3;
    }
    
    .load-btn.disabled {
        background-color: #6c757d;
        cursor: not-allowed;
        opacity: 0.6;
    }
</style>

<div class="nav-header">
    <ul class="nav-menu">
        <li class="active" onclick="showHome()">Home</li>
        <li onclick="showPreview()">Preview</li>
        <li onclick="showDeveloper()">Developer</li>
    </ul>
</div>

<div class="main-container">
    <div class="sidebar" id="home-sidebar">
        <ul>
            <li class="active" onclick="showConfig()">Config</li>
        </ul>
    </div>
    
    <div class="sidebar hidden" id="preview-sidebar">
        <ul id="claims-columns-list" aria-label="Claims columns"></ul>
    </div>
    
    <div class="sidebar hidden" id="developer-sidebar">
        <ul>
            <li class="active" onclick="showDeveloperInfo()">Info</li>
        </ul>
    </div>
    
    <div class="content-area">
        <div id="config-content">
            <form method="post" enctype="multipart/form-data">
                <div class="form-group">
                    <label for="fileName">filename:</label>
                    <input type="text" id="fileName" name="FileName" value="@Model.FileName" readonly />
                    <input type="file" id="fileNameInput" class="file-input" accept=".csv,.txt" onchange="uploadFile('filename', this)" />
                    <button type="button" class="browse-btn" onclick="document.getElementById('fileNameInput').click()">Browse</button>
                    <span id="filename-status" class="file-status">@Model.FileNameStatus</span>
                </div>
                
                <div class="form-group">
                    <label for="jsonMode">json:</label>
                    <select id="jsonMode" name="JsonMode" onchange="toggleJsonMode()" class="mode-selector">
                        @if (Model.JsonMode == "default")
                        {
                            <option value="default" selected="selected">Use Default</option>
                            <option value="upload">Upload File</option>
                        }
                        else
                        {
                            <option value="default">Use Default</option>
                            <option value="upload" selected="selected">Upload File</option>
                        }
                    </select>
                    
                    <div id="json-default-preview" class="default-preview @(Model.JsonMode == "upload" ? "hidden" : "")">
                        <span class="default-text">Default: @Model.DefaultJsonFile</span>
                    </div>
                    
                    <div id="json-upload-section" class="upload-section @(Model.JsonMode == "default" ? "hidden" : "")">
                        <input type="text" id="jsonFile" name="JsonFile" value="@Model.JsonFile" readonly class="file-path-input" />
                        <input type="file" id="jsonFileInput" class="file-input" accept=".json" onchange="uploadFile('json', this)" />
                        <button type="button" class="browse-btn" onclick="document.getElementById('jsonFileInput').click()">Browse</button>
                    </div>
                    
                    <span id="json-status" class="file-status">@Model.JsonFileStatus</span>
                </div>
                
                <div class="form-group">
                    <label for="databaseMode">database:</label>
                    <select id="databaseMode" name="DatabaseMode" onchange="toggleDatabaseMode()" class="mode-selector">
                        @if (Model.DatabaseMode == "default")
                        {
                            <option value="default" selected="selected">Use Default</option>
                            <option value="upload">Upload File</option>
                        }
                        else
                        {
                            <option value="default">Use Default</option>
                            <option value="upload" selected="selected">Upload File</option>
                        }
                    </select>
                    
                    <div id="database-default-preview" class="default-preview @(Model.DatabaseMode == "upload" ? "hidden" : "")">
                        <span class="default-text">Default: @Model.DefaultDatabase</span>
                    </div>
                    
                    <div id="database-upload-section" class="upload-section @(Model.DatabaseMode == "default" ? "hidden" : "")">
                        <input type="text" id="database" name="Database" value="@Model.Database" readonly class="file-path-input" />
                        <input type="file" id="databaseInput" class="file-input" accept=".db,.sqlite,.sqlite3" onchange="uploadFile('database', this)" />
                        <button type="button" class="browse-btn" onclick="document.getElementById('databaseInput').click()">Browse</button>
                    </div>
                    
                    <span id="database-status" class="file-status">@Model.DatabaseStatus</span>
                </div>
                
                <div class="form-group">
                    <button type="button" id="loadBtn" class="load-btn disabled" onclick="loadData()">Load</button>
                    <span id="load-warning" class="file-status"></span>
                </div>
                
                <!-- Hidden field to maintain temp directory across requests -->
                <input type="hidden" id="tmpdir" name="tmpdir" value="@Model.TempDirectory" />
            </form>
        </div>
        
        <div id="preview-content" class="hidden">
            <h3>Preview Content</h3>
            <div id="preview-container-outer">
                <div class="alert alert-info">
                    <p>Click the Preview tab and this content will be loaded automatically.</p>
                </div>
            </div>
        </div>
        
        <div id="developer-content" class="hidden">
            <h3>Developer Information</h3>
            <div>
                <strong>Temp Directory:</strong> <span id="temp-directory">@Model.TempDirectory</span>
            </div>
            <br />
            <div>
                <strong>File Upload Log:</strong>
                <div id="upload-log" style="font-family: monospace; background-color: #f8f9fa; padding: 0.625em; border: 0.0625em solid #ddd; margin-top: 0.625em; max-height: 18.75em; overflow-y: auto;">
                    <!-- Upload log entries will appear here -->
                </div>
            </div>
            <br />
            <div>
                <a class="btn btn-outline-primary" href="/ClaimsDataImporter?handler=DownloadConfig&tmpdir=@Model.TempDirectory">download config</a>
            </div>
        </div>
    </div>
</div>

